% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datalake.R
\name{search_datalake}
\alias{search_datalake}
\title{Search for keys in the data lake}
\usage{
search_datalake(..., bucket_name = mfe_datalake_bucket,
  object_versions = FALSE)
}
\arguments{
\item{...}{Patterns to look for. Each argument can be a character string or a
regex pattern. If multiple arguments are passed only Keys that match all
patterns are returned. Strings are passed to \code{\link[stringr]{coll}}
and it ignores whether it is lower or upper case. If you want to search
using regex construct the pattern using \code{\link[stringr]{regex}} (see
examples).}

\item{bucket_name}{Name of the bucket to connect. By default, it uses the
Ministry for the Environment data lake for environmental reporting
"mfedlkinput".}

\item{object_versions}{Logical. Whether to include object version IDs in the search}
}
\value{
a data frame with metadata for selected objects
}
\description{
Returns metadata about objects in a bucket. This function is a wrapper to
`aws.s3::get_bucket_df` but filters out the desired Keys. If there are more
than 1000 objects, it makes iterative calls to the AWS S3 API to retrieve the
metadata for all versions. If the function is called from an interactive
session, it invokes a data viewer (\code{\link[utils]{View}}) with the search
results.
}
\examples{
 \dontrun{
# return all objects
search_datalake()
# search for a word
search_datalake("temperature")
# search using regex
search_datalake(stringr::regex("^a"))
# search tidy datasets for atmosphere and climate 2020
search_datalake("tidy", "climate", "2020")
}
}
